package com.speedment.example.securerest.db.account.generated;

import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.example.securerest.db.account.Account;
import com.speedment.example.securerest.db.account.AccountImpl;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.annotation.Generated;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.speedment.example.securerest.db.account.Account} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedAccountSqlAdapter {
    
    private final TableIdentifier<Account> tableIdentifier;
    
    protected GeneratedAccountSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("db0", "securerest", "account");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(SqlStreamSupplierComponent streamSupplierComponent, SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected Account apply(ResultSet resultSet) throws SpeedmentException {
        final Account entity = createEntity();
        try {
            entity.setId(       resultSet.getLong(1)   );
            entity.setUsername( resultSet.getString(2) );
            entity.setPassword( resultSet.getString(3) );
            entity.setRole(     resultSet.getString(4) );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected AccountImpl createEntity() {
        return new AccountImpl();
    }
}